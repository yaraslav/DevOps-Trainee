    +----------------------------------------------------------------------+
    �                 � MobaXterm Personal Edition v24.4 �                 �
    �               (SSH client, X server and network tools)               �
    �                                                                      �
    � ? Linux distribution: ?Ubuntu-24.04                                 �
    � ? Windows drives are mounted into /mnt path (by default)             �
    � ? WSL DISPLAY is automatically redirected to Windows desktop         �
    � ? WSL filesystem is accessible in the sidebar browser                �
    � ? For more info, ctrl+click on help or visit our website.            �
    +----------------------------------------------------------------------+

yarik@Innowise-work:~$ show-aws-ec2

All AWS E2C instances:

Active instances:

All instances:
blue-server     i-0ce09bcece1110c69     stopped
load-balancer   i-06b63e20f07b80dcf     stopped
yellow-server   i-04c6e096554747642     stopped
backup_server   i-0cb9f86e13a762708     stopped
yarik@Innowise-work:~$ up-select-ec2
ID and names all instances:
blue-server     i-0ce09bcece1110c69     stopped
load-balancer   i-06b63e20f07b80dcf     stopped
yellow-server   i-04c6e096554747642     stopped
backup_server   i-0cb9f86e13a762708     stopped

Select the instance and enter its name to run (e.g. 'Linux_1'), or type 'q' to quit

blue-server

Starting instance name: blue-server
STARTINGINSTANCES       i-0ce09bcece1110c69
CURRENTSTATE    0       pending
PREVIOUSSTATE   80      stopped
Waiting for instances to be running....

EC2 instance 'blue-server' started successfully!
blue-server     3.79.59.19      172.31.30.89    to_learn_ec2    i-0ce09bcece1110c69     running

Active instances:
blue-server     3.79.59.19      172.31.30.89    to_learn_ec2    i-0ce09bcece1110c69     running

Select the instance and enter its name to run (e.g. 'Linux_1'), or type 'q' to quit

q
Stop script...

All instances:
blue-server     3.79.59.19      172.31.30.89    to_learn_ec2    i-0ce09bcece1110c69     running
load-balancer   None    172.31.24.236   to_learn_ec2    i-06b63e20f07b80dcf     stopped
yellow-server   None    172.31.18.74    to_learn_ec2    i-04c6e096554747642     stopped
backup_server   None    172.31.18.206   to_learn_ec2    i-0cb9f86e13a762708     stopped
yarik@Innowise-work:~$
yarik@Innowise-work:~$ ssh ubuntu@3.79.59.19
Welcome to Ubuntu 24.04.1 LTS (GNU/Linux 6.8.0-1021-aws x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Sat Jan  4 12:14:09 UTC 2025

  System load:  0.0               Processes:             108
  Usage of /:   35.5% of 6.71GB   Users logged in:       0
  Memory usage: 41%               IPv4 address for enX0: 172.31.30.89
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

Expanded Security Maintenance for Applications is not enabled.

32 updates can be applied immediately.
To see these additional updates run: apt list --upgradable

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


Last login: Fri Jan  3 18:39:43 2025 from 85.221.149.142
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$ for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Package 'docker.io' is not installed, so not removed
0 upgraded, 0 newly installed, 0 to remove and 32 not upgraded.
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Package 'docker-doc' is not installed, so not removed
0 upgraded, 0 newly installed, 0 to remove and 32 not upgraded.
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Package 'docker-compose' is not installed, so not removed
0 upgraded, 0 newly installed, 0 to remove and 32 not upgraded.
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Package 'docker-compose-v2' is not installed, so not removed
0 upgraded, 0 newly installed, 0 to remove and 32 not upgraded.
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Package 'podman-docker' is not installed, so not removed
0 upgraded, 0 newly installed, 0 to remove and 32 not upgraded.
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Package 'containerd' is not installed, so not removed
0 upgraded, 0 newly installed, 0 to remove and 32 not upgraded.
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Package 'runc' is not installed, so not removed
0 upgraded, 0 newly installed, 0 to remove and 32 not upgraded.
ubuntu@ip-172-31-30-89:~$ ^C
ubuntu@ip-172-31-30-89:~$ ^C
ubuntu@ip-172-31-30-89:~$ ^C
ubuntu@ip-172-31-30-89:~$ dpkg --print-architecture
amd64
ubuntu@ip-172-31-30-89:~$ curl
curl: try 'curl --help' or 'curl --manual' for more information
ubuntu@ip-172-31-30-89:~$ curl -help
Usage: curl [options...] <url>
 -d, --data <data>          HTTP POST data
 -f, --fail                 Fail fast with no output on HTTP errors
 -h, --help <category>      Get help for commands
 -i, --include              Include protocol response headers in the output
 -o, --output <file>        Write to file instead of stdout
 -O, --remote-name          Write output to a file named as the remote file
 -s, --silent               Silent mode
 -T, --upload-file <file>   Transfer local FILE to destination
 -u, --user <user:password> Server user and password
 -A, --user-agent <name>    Send User-Agent <name> to server
 -v, --verbose              Make the operation more talkative
 -V, --version              Show version number and quit

This is not the full help, this menu is stripped into categories.
Use "--help category" to get an overview of all categories.
For all options use the manual or "--help all".
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$ # Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
Hit:1 http://eu-central-1.ec2.archive.ubuntu.com/ubuntu noble InRelease
Hit:2 http://eu-central-1.ec2.archive.ubuntu.com/ubuntu noble-updates InRelease
Hit:3 http://eu-central-1.ec2.archive.ubuntu.com/ubuntu noble-backports InRelease
Hit:4 http://security.ubuntu.com/ubuntu noble-security InRelease
Reading package lists... Done
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
ca-certificates is already the newest version (20240203).
ca-certificates set to manually installed.
curl is already the newest version (8.5.0-2ubuntu10.6).
curl set to manually installed.
0 upgraded, 0 newly installed, 0 to remove and 32 not upgraded.
Hit:1 http://eu-central-1.ec2.archive.ubuntu.com/ubuntu noble InRelease
Hit:2 http://eu-central-1.ec2.archive.ubuntu.com/ubuntu noble-updates InRelease
Hit:3 http://eu-central-1.ec2.archive.ubuntu.com/ubuntu noble-backports InRelease
Hit:4 http://security.ubuntu.com/ubuntu noble-security InRelease
Get:5 https://download.docker.com/linux/ubuntu noble InRelease [48.8 kB]
Get:6 https://download.docker.com/linux/ubuntu noble/stable amd64 Packages [17.2 kB]
Fetched 66.1 kB in 1s (103 kB/s)
Reading package lists... Done
ubuntu@ip-172-31-30-89:~$ sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following additional packages will be installed:
  docker-ce-rootless-extras libltdl7 libslirp0 pigz slirp4netns
Suggested packages:
  aufs-tools cgroupfs-mount | cgroup-lite
The following NEW packages will be installed:
  containerd.io docker-buildx-plugin docker-ce docker-ce-cli docker-ce-rootless-extras docker-compose-plugin libltdl7 libslirp0 pigz
  slirp4netns
0 upgraded, 10 newly installed, 0 to remove and 32 not upgraded.
Need to get 124 MB of archives.
After this operation, 446 MB of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 http://eu-central-1.ec2.archive.ubuntu.com/ubuntu noble/universe amd64 pigz amd64 2.8-1 [65.6 kB]
Get:2 http://eu-central-1.ec2.archive.ubuntu.com/ubuntu noble/main amd64 libltdl7 amd64 2.4.7-7build1 [40.3 kB]
Get:3 http://eu-central-1.ec2.archive.ubuntu.com/ubuntu noble/main amd64 libslirp0 amd64 4.7.0-1ubuntu3 [63.8 kB]
Get:4 http://eu-central-1.ec2.archive.ubuntu.com/ubuntu noble/universe amd64 slirp4netns amd64 1.2.1-1build2 [34.9 kB]
Get:5 https://download.docker.com/linux/ubuntu noble/stable amd64 containerd.io amd64 1.7.24-1 [29.5 MB]
Get:6 https://download.docker.com/linux/ubuntu noble/stable amd64 docker-buildx-plugin amd64 0.19.3-1~ubuntu.24.04~noble [30.7 MB]
Get:7 https://download.docker.com/linux/ubuntu noble/stable amd64 docker-ce-cli amd64 5:27.4.1-1~ubuntu.24.04~noble [15.1 MB]
Get:8 https://download.docker.com/linux/ubuntu noble/stable amd64 docker-ce amd64 5:27.4.1-1~ubuntu.24.04~noble [25.9 MB]
Get:9 https://download.docker.com/linux/ubuntu noble/stable amd64 docker-ce-rootless-extras amd64 5:27.4.1-1~ubuntu.24.04~noble [9589 kB]
Get:10 https://download.docker.com/linux/ubuntu noble/stable amd64 docker-compose-plugin amd64 2.32.1-1~ubuntu.24.04~noble [12.8 MB]
Fetched 124 MB in 3s (43.1 MB/s)
Selecting previously unselected package pigz.
(Reading database ... 101476 files and directories currently installed.)
Preparing to unpack .../0-pigz_2.8-1_amd64.deb ...
Unpacking pigz (2.8-1) ...
Selecting previously unselected package containerd.io.
Preparing to unpack .../1-containerd.io_1.7.24-1_amd64.deb ...
Unpacking containerd.io (1.7.24-1) ...
Selecting previously unselected package docker-buildx-plugin.
Preparing to unpack .../2-docker-buildx-plugin_0.19.3-1~ubuntu.24.04~noble_amd64.deb ...
Unpacking docker-buildx-plugin (0.19.3-1~ubuntu.24.04~noble) ...
Selecting previously unselected package docker-ce-cli.
Preparing to unpack .../3-docker-ce-cli_5%3a27.4.1-1~ubuntu.24.04~noble_amd64.deb ...
Unpacking docker-ce-cli (5:27.4.1-1~ubuntu.24.04~noble) ...
Selecting previously unselected package docker-ce.
Preparing to unpack .../4-docker-ce_5%3a27.4.1-1~ubuntu.24.04~noble_amd64.deb ...
Unpacking docker-ce (5:27.4.1-1~ubuntu.24.04~noble) ...
Selecting previously unselected package docker-ce-rootless-extras.
Preparing to unpack .../5-docker-ce-rootless-extras_5%3a27.4.1-1~ubuntu.24.04~noble_amd64.deb ...
Unpacking docker-ce-rootless-extras (5:27.4.1-1~ubuntu.24.04~noble) ...
Selecting previously unselected package docker-compose-plugin.
Preparing to unpack .../6-docker-compose-plugin_2.32.1-1~ubuntu.24.04~noble_amd64.deb ...
Unpacking docker-compose-plugin (2.32.1-1~ubuntu.24.04~noble) ...
Selecting previously unselected package libltdl7:amd64.
Preparing to unpack .../7-libltdl7_2.4.7-7build1_amd64.deb ...
Unpacking libltdl7:amd64 (2.4.7-7build1) ...
Selecting previously unselected package libslirp0:amd64.
Preparing to unpack .../8-libslirp0_4.7.0-1ubuntu3_amd64.deb ...
Unpacking libslirp0:amd64 (4.7.0-1ubuntu3) ...
Selecting previously unselected package slirp4netns.
Preparing to unpack .../9-slirp4netns_1.2.1-1build2_amd64.deb ...
Unpacking slirp4netns (1.2.1-1build2) ...
Setting up docker-buildx-plugin (0.19.3-1~ubuntu.24.04~noble) ...
Setting up containerd.io (1.7.24-1) ...
Created symlink /etc/systemd/system/multi-user.target.wants/containerd.service ? /usr/lib/systemd/system/containerd.service.
Setting up docker-compose-plugin (2.32.1-1~ubuntu.24.04~noble) ...
Setting up libltdl7:amd64 (2.4.7-7build1) ...
Setting up docker-ce-cli (5:27.4.1-1~ubuntu.24.04~noble) ...
Setting up libslirp0:amd64 (4.7.0-1ubuntu3) ...
Setting up pigz (2.8-1) ...
Setting up docker-ce-rootless-extras (5:27.4.1-1~ubuntu.24.04~noble) ...
Setting up slirp4netns (1.2.1-1build2) ...
Setting up docker-ce (5:27.4.1-1~ubuntu.24.04~noble) ...
Created symlink /etc/systemd/system/multi-user.target.wants/docker.service ? /usr/lib/systemd/system/docker.service.
Created symlink /etc/systemd/system/sockets.target.wants/docker.socket ? /usr/lib/systemd/system/docker.socket.
Processing triggers for man-db (2.12.0-4build2) ...
Processing triggers for libc-bin (2.39-0ubuntu8.3) ...
Scanning processes...
Scanning linux images...

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
ubuntu@ip-172-31-30-89:~$ systemctl status docker.s
Unit docker.s.service could not be found.
ubuntu@ip-172-31-30-89:~$ systemctl status docker.service
? docker.service - Docker Application Container Engine
     Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; preset: enabled)
     Active: active (running) since Sat 2025-01-04 12:38:05 UTC; 1min 11s ago
TriggeredBy: ? docker.socket
       Docs: https://docs.docker.com
   Main PID: 3730 (dockerd)
      Tasks: 9
     Memory: 29.5M (peak: 98.8M)
        CPU: 354ms
     CGroup: /system.slice/docker.service
             +-3730 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock

Jan 04 12:38:03 ip-172-31-30-89 systemd[1]: Starting docker.service - Docker Application Container Engine...
Jan 04 12:38:04 ip-172-31-30-89 dockerd[3730]: time="2025-01-04T12:38:04.420054880Z" level=info msg="Starting up"
Jan 04 12:38:04 ip-172-31-30-89 dockerd[3730]: time="2025-01-04T12:38:04.424483235Z" level=info msg="OTEL tracing is not configured, usi>
Jan 04 12:38:04 ip-172-31-30-89 dockerd[3730]: time="2025-01-04T12:38:04.424615137Z" level=info msg="detected 127.0.0.53 nameserver, ass>
Jan 04 12:38:04 ip-172-31-30-89 dockerd[3730]: time="2025-01-04T12:38:04.635100461Z" level=info msg="Loading containers: start."
Jan 04 12:38:05 ip-172-31-30-89 dockerd[3730]: time="2025-01-04T12:38:05.203069183Z" level=info msg="Loading containers: done."
Jan 04 12:38:05 ip-172-31-30-89 dockerd[3730]: time="2025-01-04T12:38:05.523353076Z" level=info msg="Docker daemon" commit=c710b88 conta>
Jan 04 12:38:05 ip-172-31-30-89 dockerd[3730]: time="2025-01-04T12:38:05.524336125Z" level=info msg="Daemon has completed initialization"
Jan 04 12:38:05 ip-172-31-30-89 dockerd[3730]: time="2025-01-04T12:38:05.720755676Z" level=info msg="API listen on /run/docker.sock"
Jan 04 12:38:05 ip-172-31-30-89 systemd[1]: Started docker.service - Docker Application Container Engine.

ubuntu@ip-172-31-30-89:~$ docker

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Authenticate to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx
  checkpoint  Manage checkpoints
  compose*    Docker Compose
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  config      Manage Swarm configs
  node        Manage Swarm nodes
  secret      Manage Swarm secrets
  service     Manage Swarm services
  stack       Manage Swarm stacks
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default "/home/ubuntu/.docker")
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context
                           set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info", "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/
ubuntu@ip-172-31-30-89:~$ docker run hello-world
docker: permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Head "http://%2Fvar%2Frun%2     Fdocker.sock/_ping": dial unix /var/run/docker.sock: connect: permission denied.
See 'docker run --help'.
ubuntu@ip-172-31-30-89:~$ sudo docker run hello-world
Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
c1ec31eb5944: Pull complete
Digest: sha256:5b3cc85e16e3058003c13b7821318369dad01dac3dbb877aac3c28182255c724
Status: Downloaded newer image for hello-world:latest

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (amd64)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/get-started/

ubuntu@ip-172-31-30-89:~$ sudo docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
ubuntu@ip-172-31-30-89:~$ sudo docker ps -a
CONTAINER ID   IMAGE         COMMAND    CREATED          STATUS                      PORTS     NAMES
ed0a0d69a03c   hello-world   "/hello"   22 seconds ago   Exited (0) 20 seconds ago             loving_merkle
ubuntu@ip-172-31-30-89:~$ sudo docker img
docker: 'img' is not a docker command.
See 'docker --help'
ubuntu@ip-172-31-30-89:~$ sudo docker images
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
hello-world   latest    d2c94e258dcb   20 months ago   13.3kB
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$ sudo docker stop loving_merkle
loving_merkle
ubuntu@ip-172-31-30-89:~$ sudo docker ps -a
CONTAINER ID   IMAGE         COMMAND    CREATED          STATUS                      PORTS     NAMES
ed0a0d69a03c   hello-world   "/hello"   13 minutes ago   Exited (0) 13 minutes ago             loving_merkle
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$ sudo docker ps -a
CONTAINER ID   IMAGE         COMMAND    CREATED          STATUS                      PORTS     NAMES
ed0a0d69a03c   hello-world   "/hello"   13 minutes ago   Exited (0) 13 minutes ago             loving_merkle
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$ sudo docker ps -a
CONTAINER ID   IMAGE         COMMAND    CREATED          STATUS                      PORTS     NAMES
ed0a0d69a03c   hello-world   "/hello"   14 minutes ago   Exited (0) 13 minutes ago             loving_merkle
ubuntu@ip-172-31-30-89:~$ sudo docker stop loving_merkle
loving_merkle
ubuntu@ip-172-31-30-89:~$ sudo docker restart loving_merkle
loving_merkle
ubuntu@ip-172-31-30-89:~$ sudo docker ps -a
CONTAINER ID   IMAGE         COMMAND    CREATED          STATUS                     PORTS     NAMES
ed0a0d69a03c   hello-world   "/hello"   15 minutes ago   Exited (0) 2 seconds ago             loving_merkle
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$ sudo docker ps -a
CONTAINER ID   IMAGE         COMMAND    CREATED          STATUS                      PORTS     NAMES
ed0a0d69a03c   hello-world   "/hello"   15 minutes ago   Exited (0) 12 seconds ago             loving_merkle
ubuntu@ip-172-31-30-89:~$ ^C
ubuntu@ip-172-31-30-89:~$ sudo docker rm  loving_merkle
loving_merkle
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$ sudo docker ps -a
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
ubuntu@ip-172-31-30-89:~$ ^C
ubuntu@ip-172-31-30-89:~$ docker run -d -p 127.0.0.1:28080:80 --name nginx-01 nginx:stable
docker: permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Head "http://%2Fvar%2Frun%2Fdockvar/run/docker.sock: connect: permission denied.
See 'docker run --help'.
ubuntu@ip-172-31-30-89:~$ groups
ubuntu adm cdrom sudo dip lxd
ubuntu@ip-172-31-30-89:~$ group
Command 'group' not found, did you mean:
  command 'groups' from deb coreutils (9.4-2ubuntu2)
  command 'grop' from deb grop (2:0.10-1.2)
Try: sudo apt install <deb name>
ubuntu@ip-172-31-30-89:~$ groups
ubuntu adm cdrom sudo dip lxd
ubuntu@ip-172-31-30-89:~$ getent group docker
docker:x:988:
ubuntu@ip-172-31-30-89:~$ getent group sudo
sudo:x:27:ubuntu
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$ cat /etc/sudoers
cat: /etc/sudoers: Permission denied
ubuntu@ip-172-31-30-89:~$ sudo cat /etc/sudoers
#
# This file MUST be edited with the 'visudo' command as root.
#
# Please consider adding local content in /etc/sudoers.d/ instead of
# directly modifying this file.
#
# See the man page for details on how to write a sudoers file.
#
Defaults        env_reset
Defaults        mail_badpass
Defaults        secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"

# This fixes CVE-2005-4890 and possibly breaks some versions of kdesu
# (#1011624, https://bugs.kde.org/show_bug.cgi?id=452532)
Defaults        use_pty

# This preserves proxy settings from user environments of root
# equivalent users (group sudo)
#Defaults:%sudo env_keep += "http_proxy https_proxy ftp_proxy all_proxy no_proxy"

# This allows running arbitrary commands, but so does ALL, and it means
# different sudoers have their choice of editor respected.
#Defaults:%sudo env_keep += "EDITOR"

# Completely harmless preservation of a user preference.
#Defaults:%sudo env_keep += "GREP_COLOR"

# While you shouldn't normally run git as root, you need to with etckeeper
#Defaults:%sudo env_keep += "GIT_AUTHOR_* GIT_COMMITTER_*"

# Per-user preferences; root won't have sensible values for them.
#Defaults:%sudo env_keep += "EMAIL DEBEMAIL DEBFULLNAME"

# "sudo scp" or "sudo rsync" should be able to use your SSH agent.
#Defaults:%sudo env_keep += "SSH_AGENT_PID SSH_AUTH_SOCK"

# Ditto for GPG agent
#Defaults:%sudo env_keep += "GPG_AGENT_INFO"

# Host alias specification

# User alias specification

# Cmnd alias specification

# User privilege specification
root    ALL=(ALL:ALL) ALL

# Members of the admin group may gain root privileges
%admin ALL=(ALL) ALL

# Allow members of group sudo to execute any command
%sudo   ALL=(ALL:ALL) ALL

# See sudoers(5) for more information on "@include" directives:

@includedir /etc/sudoers.d
ubuntu@ip-172-31-30-89:~$ getent group docker
docker:x:988:
ubuntu@ip-172-31-30-89:~$ sudo usermod -aG docker $USER
ubuntu@ip-172-31-30-89:~$ getent group docker
docker:x:988:ubuntu
ubuntu@ip-172-31-30-89:~$ docker

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Authenticate to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx
  checkpoint  Manage checkpoints
  compose*    Docker Compose
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  config      Manage Swarm configs
  node        Manage Swarm nodes
  secret      Manage Swarm secrets
  service     Manage Swarm services
  stack       Manage Swarm stacks
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default "/home/ubuntu/.docker")
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context set with "do
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info", "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/
ubuntu@ip-172-31-30-89:~$ ^C
ubuntu@ip-172-31-30-89:~$ sudo groupadd docker
groupadd: group 'docker' already exists
ubuntu@ip-172-31-30-89:~$ ^C
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$ newgrp docker
ubuntu@ip-172-31-30-89:~$ ^C
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$ ^[[200~docker run -d -p 127.0.0.1:28080:80 --name nginx-01 nginx:stable~
docker: command not found
ubuntu@ip-172-31-30-89:~$ ^C
ubuntu@ip-172-31-30-89:~$ docker run -d -p 127.0.0.1:28080:80 --name nginx-01 nginx:stable
Unable to find image 'nginx:stable' locally
stable: Pulling from library/nginx
fd674058ff8f: Pull complete
7182e7b8bb70: Pull complete
f54ce070d3ce: Pull complete
d5cc0a5fd30d: Pull complete
954f71c94ccf: Pull complete
2b90f21a19b0: Pull complete
a7f0ecbff445: Pull complete
Digest: sha256:df6f3c8e3fb6161cc5e85c8db042c8e62cfb7948fc4d6fddfad32741c3e2520d
Status: Downloaded newer image for nginx:stable
82d2c29c92311730293b2315a0ddcd6da41bd67e4657cc563098d94d37427fa2
ubuntu@ip-172-31-30-89:~$ curl http://localhost
<html><body style="background-color:blue;">Blue Server</body></html>
ubuntu@ip-172-31-30-89:~$ curl http://localhost:28080
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
ubuntu@ip-172-31-30-89:~$ ^C
ubuntu@ip-172-31-30-89:~$ docker ps
CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                     NAMES
82d2c29c9231   nginx:stable   "/docker-entrypoint.�"   42 minutes ago   Up 42 minutes   127.0.0.1:28080->80/tcp   nginx-01
ubuntu@ip-172-31-30-89:~$ docker ps -a
CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                     NAMES
82d2c29c9231   nginx:stable   "/docker-entrypoint.�"   42 minutes ago   Up 42 minutes   127.0.0.1:28080->80/tcp   nginx-01
ubuntu@ip-172-31-30-89:~$ docker ps
CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                     NAMES
82d2c29c9231   nginx:stable   "/docker-entrypoint.�"   42 minutes ago   Up 42 minutes   127.0.0.1:28080->80/tcp   nginx-01
ubuntu@ip-172-31-30-89:~$ ^C
ubuntu@ip-172-31-30-89:~$ docker stop nginx-01
nginx-01
ubuntu@ip-172-31-30-89:~$ docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
ubuntu@ip-172-31-30-89:~$ docker ps -a
CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS                     PORTS     NAMES
82d2c29c9231   nginx:stable   "/docker-entrypoint.�"   46 minutes ago   Exited (0) 6 seconds ago             nginx-01
ubuntu@ip-172-31-30-89:~$ ^C
ubuntu@ip-172-31-30-89:~$ curl http://localhost:28080
curl: (7) Failed to connect to localhost port 28080 after 0 ms: Couldn't connect to server
ubuntu@ip-172-31-30-89:~$ ^C
ubuntu@ip-172-31-30-89:~$
ubuntu@ip-172-31-30-89:~$ docker image ls
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
nginx         stable    29ef6eaebfc5   4 months ago    188MB
hello-world   latest    d2c94e258dcb   20 months ago   13.3kB
ubuntu@ip-172-31-30-89:~$ ^C

